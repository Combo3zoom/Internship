from random import uniform

def InputArray():
    check=True
    array=[]
    while True:
        try:
            size=int(input("Enter array order: "))   
            while(size<=0):
                size=int(input("Enter array order more 0: "))
        except ValueError:
            print("Incorrect size, try again")    
            continue
        break

    for i in range(size):
        array.append([])
        for j in range(size):
             check=True
             while(check):
                 try:
                      array[i] += [float(input())]
                      check=False
                 except ValueError:
                      print("re-enter element, try again")  
          
    print()
    return array 
      
     

def AutomaticallyInputArray():
    a,b,size=0,0,0
    while True:
        size=int(input("Enter array order: "))
        while(size<=0):
            size=int(input("Enter array order more 0: "))

        print("Also enter the lower and upper limits of the matrix elements:")
        a=float(input("a = "))
        b=float(input("b = "))
        while(a>b):
            print("a must be less b")
            a=float(input("a = "))
            b=float(input("b = "))
        break

    array=[]
    for i in range(size):
      array.append([])
      for j in range(size):
          array[i] += [uniform(a,b)]
    print()
    return array

def OutputArray(array):
    for i in range(len(array)):
        print(array[i])
    print()
    return

def MatrixIndexes(indexIn1DArr, matrixColNum):
    row = indexIn1DArr // matrixColNum
    col = indexIn1DArr - row * matrixColNum
    return row, col

def BinarySearch(array):
    while True:
        try:
            searchValue=float(input("Enter value, which your want to found: "))
        except ValueError:
            print('incorrect input, try again')
            continue
        break

    lowerLimit=0
    upperLimit=len(array)*len(array)
    while lowerLimit != upperLimit:
        middle = (lowerLimit + upperLimit) // 2
        coordinates = MatrixIndexes(middle, len(array))
        if array[coordinates[0]][coordinates[1]] == searchValue:
            return coordinates
        elif array[coordinates[0]][coordinates[1]] > searchValue:
            upperLimit = middle
        else:
            lowerLimit = middle + 1

    return 'does not exist'

def Sorting(array):
    count=0
    size =len(array)*len(array)
    for run in range(size-1):
        for i in range(len(array)):
            for j in range(len(array)-1):
                if(array[i][j] > array[i][j+1]):
                    array[i][j],array[i][j+1]=array[i][j+1], array[i][j]
                    count +=1     
                if(j==len(array)-2 and i !=len(array)-1):
                    if(array[i][j+1]>array[i+1][0]):
                        array[i][j+1],array[i+1][0]= array[i+1][0],array[i][j+1]
                        count +=1  
    return array,count


def IsErrorEmpty(array):
    if(array==[]):
        print("fill the array with elements")
        return 1
    return 0


def menu():
    array=[]
    while True:
        try:      
            print("Enter command \n"
                  "1 - Input matrix manually \n"
                  "2 - Input matrix automatically \n"
                  "3 - Output matrix \n"
                  "4 - Use binary search \n"
                  "5 - Use sorting \n"
                  "exit - exit with program \n")
            userChoose = input()
            if(userChoose=='1'):             
                array=InputArray()
                continue
            elif(userChoose=='2'):
                array=AutomaticallyInputArray()
                continue
            elif(userChoose=='3'):
                OutputArray(array)
                continue
            elif(userChoose=='4'):
                if(IsErrorEmpty(array)):
                    continue               
                a = BinarySearch(array)
                print("coordinates ",a )
                continue
            elif(userChoose=='5'):
                if(IsErrorEmpty(array)):
                    continue
                count,array=Sorting(array)[1],Sorting(array)[0]
                print('Count operation ', count)
                continue
            elif(userChoose=='exit'):
                break
            elif(userChoose !='exit'):
                print('incorrect input, try again')
                continue
        except ValueError:
            print()
            print("Syntax error, try again ")
            print('-----------------------')
            continue
        break 
    return

menu()